trigger:
- '*'

variables:
- group: 'Release'


stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'  

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true
  
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: 'ff55d2d1-7bc2-4650-b7bc-dc670a0eb2bf/97374bed-5c36-4435-8189-eeee8aa38e86'
        vstsFeedPackagePublish: 'spacegame-drop'
        versionOption: 'patch'
      


- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: S3Upload@1
            inputs:
              awsCredentials: 'AWS-service'
              regionName: 'us-west-2'
              bucketName: '$(S3bucket)'
              sourceFolder: '$(Pipeline.Workspace)/drop'
              globExpressions: '**'
              keyManagement: 'awsManaged'
              encryptionAlgorithm: 'AES256'

          - task: CodeDeployDeployApplication@1
            inputs:
              awsCredentials: 'AWS-service'
              regionName: 'us-west-2'
              applicationName: '$(WebAppName)'
              deploymentGroupName: '$(DeploymentName)'
              deploymentRevisionSource: 'workspace'
              revisionBundle: '$(buildConfiguration)/*.zip'
              bucketName: '$(S3bucket)'
              description: '$(Date:yyyyMMdd).$(Rev:r)'
              fileExistsBehavior: 'OVERWRITE'

          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'resource manager - sandbox release - tailspin'
              appName: '$(WebAppName)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
