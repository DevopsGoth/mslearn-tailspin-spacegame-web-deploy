trigger:
- '*'

variables:
- group: 'Release'


stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-18.04'
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.300'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'  

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true
        
    - task: CopyFiles@2
      inputs:
        Contents: |
          scripts/*
          **/appspec.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
  
    - publish: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
      artifact: drop

- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-18.04'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AWSCLI@1
            inputs:
              awsCredentials: 'AWS-service'
              regionName: 'us-west-2'
              awsCommand: 'deploy'
              awsSubCommand: 'push'
              awsArguments: '--application-name $(WebAppName) --description "Revision for sandbox app" --ignore-hidden-files --s3-location s3://$(S3bucket)/sitedeployment.zip --source $(Pipeline.Workspace)/drop'

          - task: CodeDeployDeployApplication@1
            inputs:
              awsCredentials: 'AWS-service'
              regionName: 'us-west-2'
              applicationName: '$(WebAppName)'
              deploymentGroupName: '$(DeploymentName)'
              deploymentRevisionSource: 's3'
              bucketName: '$(S3bucket)'
              bundleKey: 'sitedeployment.zip'
              description: '$(Date:yyyyMMdd).$(Rev:r)'
              fileExistsBehavior: 'OVERWRITE'
              logRequest: true
              logResponse: true